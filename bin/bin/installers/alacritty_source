#!/usr/bin/env bash

# This script builds Alacritty from sources using a Docker container that's
# using an Docker image that's generated on the fly
#
# The generated Docker image is based on the same linux distro
# as the host that this script is launched in.
#
# The build is done in prefixed mode and the directory can be mounted
# in ~/.local
# After the script is executed you can setup up the local build by running
#
# cd ~/.dothome
# stow .bld_alacritty

set -x

VERSION="0.11.0"
# https://github.com/alacritty/alacritty/archive/refs/tags/v0.11.0.tar.gz
SRC_URL="https://github.com/alacritty/alacritty/archive/refs/tags/v${VERSION}.tar.gz"
WORKSPACE=$(mktemp -d)
DIST_ID=$(cat /etc/*release|grep "^ID=" |cut -d= -f2)
DIST_VER=$(cat /etc/*release|grep "^VERSION_ID=" |sed -e 's/"//g'  |cut -d= -f2)
USER_UID=$(id -u)
USER_NAME=$(id -un)
BUILD_DIR=${HOME}/.dothome/.bld_alacritty/.local

[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}
cd ${WORKSPACE}

curl -LO ${SRC_URL}
tar -xzf *.tar.gz

cat << EOF > Dockerfile
FROM ${DIST_ID}:${DIST_VER}

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" apt-get install -y \
	curl \
    cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3 

RUN useradd -m ${USER_NAME} -s /usr/bin/bash -u ${USER_UID}
EOF

DCK_HASH=$(md5sum Dockerfile)
DCK_TAG=${DCK_HASH::8}
DCK_IMG="allacritty-dev:${DCK_TAG}" 

docker image inspect ${DCK_IMG} &> /dev/null || \
        docker build --rm -t ${DCK_IMG} -f Dockerfile .

# exit 0

ls ${HOME}/.local &>/dev/null || mkdir -p $HOME/.local
set -x
docker run -dti --rm \
	-u ${USER_NAME} \
	-v ${BUILD_DIR}:/home/${USER_NAME}/.local \
	-v ${WORKSPACE}/alacritty-${VERSION}:/home/${USER_NAME}/alacritty \
	-w /home/${USER_NAME}/alacritty \
	${DCK_IMG} bash -xc \
	"while true; do sleep 60; done"
	# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
	# source ~/.cargo/env
	# cargo build --release
	# mkdir -p ~/.local/bin
	# cp target/release/alacritty ~/.local/bin
set +x
cd -

echo "Cleanup steps:"
echo "rm -rf ${WORKSPACE}"
echo "docker rmi ${DCK_IMG}"

# echo "Install deps:"
# echo "sudo apt install libevent-core-2.1-7"


